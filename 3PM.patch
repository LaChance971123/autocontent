diff --git a/.gitignore b/.gitignore
new file mode 100644
index 0000000000000000000000000000000000000000..7ccaeb18bb1039032a770b8bb249653c9e0995da
--- /dev/null
+++ b/.gitignore
@@ -0,0 +1,6 @@
+__pycache__/
+*.pyc
+output/
+temp/
+.env
+*.log
diff --git a/Dockerfile b/Dockerfile
new file mode 100644
index 0000000000000000000000000000000000000000..d803c8ad4e11e05d0293a8bda9843100867897f0
--- /dev/null
+++ b/Dockerfile
@@ -0,0 +1,22 @@
+FROM python:3.10-slim
+
+# Install system dependencies
+RUN apt-get update && apt-get install -y ffmpeg git && rm -rf /var/lib/apt/lists/*
+
+# Set work directory
+WORKDIR /app
+
+# Copy project files
+COPY . .
+
+# Install Python dependencies
+RUN pip install --upgrade pip && pip install -r requirements.txt
+
+# Expose port for Render / Uvicorn
+EXPOSE 8000
+
+# Make start.sh executable
+RUN chmod +x start.sh
+
+# Default command
+CMD ["./start.sh"]
diff --git a/README.md b/README.md
new file mode 100644
index 0000000000000000000000000000000000000000..aad26bf0beabafb7f0b2225ab1e4e3b9d3816bec
--- /dev/null
+++ b/README.md
@@ -0,0 +1,43 @@
+# AutoContent CLI
+
+Run the automated video generation pipeline.
+
+## Usage
+
+```bash
+python pipeline.py --script PATH --background PATH [options]
+```
+
+### Options
+- `--output-dir DIR` – custom output folder
+- `--dry-run` – skip final video rendering
+- `--test-mode` – use dummy audio and subtitles
+- `--verbose` – debug logging
+- `--keep-temp` – keep temporary files
+- `--thumbnail` – export thumbnail image with title overlay
+- `--compress` – compress final video to ~1 Mbps
+- `--model-size SIZE` – WhisperX model size (e.g., `large-v2`)
+- `--cleanup-old N` – remove the oldest N folders in `output/`
+- `--json` – print a JSON summary
+- `--strict` – stop on first failure
+- `--max-length SECS` – trim scripts longer than this length (approx. 3 words/sec)
+
+Environment variable `API_MODE=1` suppresses info logs when not running with `--verbose`.
+
+### Example
+
+```bash
+python pipeline.py --script scripts/example.txt --background assets/bg.mp4 --thumbnail --compress --json
+```
+
+## FastAPI Server
+
+Run the API server to queue jobs via HTTP:
+
+```bash
+uvicorn server:app --reload
+```
+
+POST `/generate` with form fields `script_file` and `background_file` plus optional parameters `test_mode`, `verbose`, `strict`, `json`, `max_length`. The response contains a `job_id`.
+
+GET `/status/{job_id}` returns the current job status and the output folder when complete.
diff --git a/desktop.ini b/desktop.ini
deleted file mode 100644
index c0af221fdd6539ce983329569df29014d44c861f..0000000000000000000000000000000000000000
--- a/desktop.ini
+++ /dev/null
@@ -1,6 +0,0 @@
-[.ShellClassInfo]
-IconResource=C:\WINDOWS\System32\SHELL32.dll,43
-[ViewState]
-Mode=
-Vid=
-FolderType=Generic
diff --git a/healthcheck.py b/healthcheck.py
new file mode 100644
index 0000000000000000000000000000000000000000..adcb7f2365bad764ca56ddf91612b2f3441d26b0
--- /dev/null
+++ b/healthcheck.py
@@ -0,0 +1,2 @@
+import pipeline
+print('ok')
diff --git a/modules/__pycache__/__init__.cpython-310.pyc b/modules/__pycache__/__init__.cpython-310.pyc
deleted file mode 100644
index 664cb1dfe788ae5c41509c43acf67c8d58785cc8..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 127
zcmd1j<>g`kf=Apg86f&Gh(HF6K#l_t7qb9~6oz01O-8?!3`HPe1o2DB$tuRNv?Sj-
sKd&S;uOucnKczG$wKyg|J~J<~BtBlRpz;=n4Mfxqq_>y}NU$&f01QMKwEzGB

diff --git a/modules/__pycache__/config.cpython-310.pyc b/modules/__pycache__/config.cpython-310.pyc
deleted file mode 100644
index 51138dd377b83cd2eae0ff6da9677cd5f9143fba..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 516
zcmZWmO>Yx15Vf66;v`f;6$g$haX`7OLi4drg%D|2DS^<YtyI8@WNkCv)@5Ty-fbju
zgfstv9{UgYExvL<`~@!HO@u&VG=AfGhc|C*y|YtCF7Cb$ufAf0z7@^CQFhI9cd}Cl
zfB>h66_uoTK^VbEpzG2XZ-Zq~xy4Wd@3zFMf`}@VKVyub!YEW(O;Gbl)UwB-4)hcL
zhykCWX6=X5MMq6+8>x<ggU*Fotw|89y};d?m^HQ>U&i?rYiI9y(&}{PB6Rr#+97m$
zVXNP2_u_uHzc&w)u7Eh)@3gzUe$v_xFMvH5pN<C0<F}KQdeaS0UQSO&d(-vkwahZ9
zF8yc{okvHL!QmMnOvn6H^v>7DKR+H1BR+oNOXU|%3eFX2v|0$2`>WW<_#zcq&}>+u
zGgjI9G{h}ry~3^auC-LQ3eu=}AuQ!Qk*VOEQKz(7$nO3>-O@j^?fvNQ#K;(J?vQCX
z{SEx|4-aO8n_LgIa<7)p78-7xq1jxkL|z8V50*aNa?jk~qHNazMfdQ-QXPB5!<10$
G{rU||T97~h

diff --git a/modules/__pycache__/generate_card.cpython-310.pyc b/modules/__pycache__/generate_card.cpython-310.pyc
deleted file mode 100644
index 7594068385dd302cd6dbf214729ed8e13c582afd..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 1377
zcmY*ZOK;;g5avUYCD~RUn^$|-?y0RVZBeuhP%Mgi?POyhb%LxH3lJ$>HKY?IlI5l7
zO|qbGz4{j{3fRZ~n%;Ts$=4qD(hilh$Wq|P`G(|hI5SkyY=#Kh-|yQOf4T_$Wy!-<
z1M(yEk^ykUafX;3NrrR6NKP5e9p+%GqnVp~%*$)6mix@l0~X{V3-dawV<f^M=8kA^
z7rG}JLyy<E|C`I29KS$uumt<47gOVQ^W<EZpc*<dxxN?oi;;>w6Si9?ox!Var+;AT
zm3*+*eSXk4QAPHTdi}w13nteq-rxJ__^{RAyVI>!x}%r<<CpiVR!{aioo;{7Z6EdS
z)&%9`S1CA8m2p+7GGXe)M2#nEFizCP8MS`iw-p#|fZEW@A231+U1E+EQFKT+;dDl)
zR5^23(*>S7%Db#7pF7;0k*Rynyo!0+xeRPTG<t`AC)(u!4`&coMR<J&O>5_9>T5g?
z7ib#r#x&GH2mSnbTG!z_#GASfyXd?QvkkD+&<*YJXhwAH3d^2`^{;oeKX2-Aficqc
z4>@0%Hnk7-*1)dyV^ueYM2BGG-V5F2YrAOLd_7Rn<;r|jtu3&eDKuZV()<x$hx<i3
zns4w&5QEJH0Y>LrI^r8TT2Q!0bh%ya-O*%$`6l0*5%7f0KeF7G4-~<6&(M?S&tkgV
zfrv^Q-U?!D+_NGp<nk*}0dvaqtyn&_ge>PUEI$W$OXQcZ_a6}D)_)Ka;|!s60Mjg6
za?l%O@RJzJZIG8Y7QVKy55OEazXe8r0U|#Eh>6^^vV}ez?TeeVRD<Fw{#X*w89EZz
z5}po{o&{SU%&~PV9V_}uPK3H03u!CGI7-|=VU^>|)>o-yI%c8OWny%$E{vCq$6~|{
zDN5tmf-_!qU@7f8HBJGurgm10-Uz9TCxwj!s~xs_ZFcm6x#Of%!uWY|C3q@JQv)0&
zxqy%*Z$!Kz>tIGUEHnX_bCyVM91i}n$i`{#fBCbp;&*Q#$djAFb;`jZH%mvNH12gF
zIXG#VaV%kh5)c}zVBYP(-ikRX`1%Ku-@;+<KYRB5X=|d2Hk>0y>NGF-BopQ7xfltV
zC^4|kd@;T?%?~s-xaBth8zjULjqncjse^rN`#O9c4heMZ5Fc;B*r2O8f^Q4f%3atP
zNAgn`3_b21R#~gkR3*rG;NUPle~?0(DCt`WEL4G~kgCd5b(071owe&fy}OG22cXh!
M_0a}?f*+HA0ntHX1ONa4

diff --git a/modules/__pycache__/generate_subtitles.cpython-310.pyc b/modules/__pycache__/generate_subtitles.cpython-310.pyc
deleted file mode 100644
index b28a3d8181fd082a67fa80f8b12d135913b01ec1..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 964
zcmZWnO>fgM7`C0H$+~uo9)`GuV}KQj-6n*9AtWxl3<+davb@-9vn6q4J1MJD329vS
z3lP$F<S*sQiNC-F-lXf8gr(Qc`}Mp}9$O8EeFV!scstv75c=6VcNfIaD=_m8Hh~0A
z5nY{_;?5_Oz)4akbE%7waD@96QBU@ScSiIh>4~23F9>AtQD;%`3$V~(gqxA!m1Nu)
zX3Arm*i@RBw8@(l!0Ce>fSE6_SwOhJ7+HKuuAFP6HwDSDaF)cnr=D<YB4FO7vvg|b
zs#l|HymTSs*RJp%BFF}pWI~qSvS;0^0HPZZ^=hcB$+fri0l#14Z|FPerfk%{*n|q)
z@kd7}8XPVTK4_ksSSQCxJ`LxIorND~i7BN16g~-gnoRRd<~BT0I-Dylc2il&G_*-3
zjpbQk#^Z70#--rYiHmX(q+CzsZna1KlT>lL_dLRM5UZ>xtz`DRkPVdN(~?hRMCfq+
z&0-~F(-X2vVkj|k+Kx4g$M3U3t4fOSjBBpW<gT&jsSIx=4qMelXjMpuEkU+!jrxsO
z=p?s|XO)g;y1jimNDSi@Pf~uI!kqc)Uq916kQFQg5-IK5wI-5ockxb#o2=J4y1m&b
zX!^VqiDCt}vu3y^)w$Y(ipJ|8o1T`YOfB_0m+>aZq~(HJPPbMm*1<~g1L=Fv`1|Rb
z{mJXnssoi<P+|g&CA_G~ROV81&~iP@jEnPT^nbVqC}tbB0FTHv?vow7gSW^C>-#OS
zfU%4xIb(}0E3@KRr9k-coL7rc=l_F;7ajQxQATe-qi&xu9p2Cxmo`aFC&n#o&NIna
f_ZN4zmPr%5SoOWc;H}63y#NnzK!V{GcK`eZlI|2F

diff --git a/modules/__pycache__/generate_voiceover_elevenlabs.cpython-310.pyc b/modules/__pycache__/generate_voiceover_elevenlabs.cpython-310.pyc
deleted file mode 100644
index 47e0f352623550bcd07c4cf74f97668627b10e1c..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 831
zcmZWn&2AGh5MFz|$u|9=s!GLyL#~TNl{QJYK?sqCpax2RC~B!yX|;`=cGb-~*xrR!
z>4kEwcm+7}O1^U90k|L}m`zk#i5bt>V~@t)e72aLE?FQCezs2DVaxiS2e*Yl@Dxlv
z2gfXiVvFW8j!_>|+_$NXEM`-}2z5A-^W0JQc!4>W=p$kUUSvgH>=EX&iBE*O4DDK8
z=?B!ZHa%?IW1essYHo-MGfu1OH0V`owJ!HzEU~K3YAb%FQK_zkje29b>-XxMh5l--
zT3>1ODy#kxqw}5D>&?N|+l?&QulqYMws+Q-x6jvKMM_1<ak;(G-fM4eG}m^6=5{A|
z**+)>S>D^~wAw-ESvg9|i#*BlJ(waXl0Hv#ISXYJ9>rWOnn~4_(Le`-P@kAdk?KJ@
z4!S_tKXG8?g0;ZZ8*thh0$mI<`^x@2b%BTY3;JqZ*!w^q0lfs`5_ic`3-1xKay<ak
zcxY>z5lxtLMJ|YThGd8?F_3Hlb%jlX<hhgT-osT78J8zr!Jtcem&ZKgNzfOGh+!iQ
z;~-n|h#{JP(A3F9)aBIa3&vww3<ptg%Fn!lA!5K2LnIHG%-b>UH8W=Jf99kODV`(q
zUm^334eHUtm>=qdDT~B6OU}T-FMsXPVKddDB@zvU9>UEj(0O?M;=u@!$hZu~(Btq(
zEe_7i-2WN*7gh7%W>E><|ATFe##;D2Q<SrC;7u4T6fND98g(<mE2khqPJ%PD?VBfV
mODUwWm6oFlBh<Itojl)tJcj)QL8S7&T);puK`wUD0{#n=Y1dT%

diff --git a/modules/__pycache__/render_final_video.cpython-310.pyc b/modules/__pycache__/render_final_video.cpython-310.pyc
deleted file mode 100644
index e3460102594c5b2e6ccf58c0058fb361e63d144c..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 1546
zcmah}OK&4Z5bo|7&y1ZouZ3(L3m5@HmSX2Y!okGhwb~0PNbE{T<3v_xx^0g$FS^@y
zJhCMuR$}+CKLA#doa6ok{>ofAafMqX2sPv2<t5Rhs_v@ps;;l9dctC{fM6Ui-S50<
zBJ@)#{B`Icd;}yv2gVS?9<rx1ws9sCn`E<QYuT*ZIwMSbjO-jYn0`*g+dRi|%wXoX
z8U_y!Gb&p@gGY4iXz6r2(pXl3Ql0z-*a%PHG$U7JtSQ_j6OCz1XSpkFrq^eB<BH6*
zIcAQu=ZIOC+Sp)uR$y}@9S8yC*!;*~MYaI6$d=eLTVZ$DE9_OaIwI}WvB~Z}Mc<(o
zW@~Kyu{E}o-p!3Hw($&)^P~L4xI!4k8_MijBa>~id(Q|)Um>>n6v3{R?y7vZFqvbo
zjR?f>`lWV-0XYKX|8r)5%5NNB<CAN=Z5vcduB1J8MxFDv2zvpO@uK2VHTy2(VRgXI
z{J1!viVL5L^J)~d<9uVM);|TydfaWu-kCc6ps@!U=}?c?-`hK=Rd%;pAsDE-XrIw7
zC-g$$bZ8K8&v!4ls8d?ssqP*$20qwkF4AS#=fb1I`a$iWc56?2Ds1$_o;tOSR?Clg
zJ0_JOkQ*;nTCN9iHJ#9pJbn@D6`w}2F+Cn@yEO_br`ESk&po@?dw)N+Dv^89Z28JI
zhrRy(-cFRApteS-6Xz?k6N(i40|)wIHZZJmKzD%TAuxvTqto><dV=JpLR~x|jEvB8
zbV<@0WSVJ(^hu6ob$Nn>@ip}DLsZs}%X)%GBJIBfR|J7M-Y9;_1IC3Lv`Z~Fpk8U3
z{%W<<{^9#{{P<znNHjT=i6Iq(ge19va1~E-Ew3j#iLP891nF@em2rZd7dX*b81NV9
zdh3(g$;Xh$Ps2d*K%Mv@>v>$Bi0sa0cHwQkqhVso$c0LYcT>1az$~oe6<mN%|BZa3
z-^6eIhvA_YLiy!U_0}3<FccMSt{%ZM=XAJp9+!)aFFrdhJ$Q+*G<C&UN%kCvOWEpq
z-mq3maG^Y(n1V+hb$CKTndlK!fU_IAL6TP;!6}1uCB~y{3DDs>l@y?xA`zyp5>501
zVE_UFza1njVC6zmpgrb>&CFXd?LAj{d@9aCUZb9x3Oek`r10`(*!kHzuowQ`dx_@w
zOf16%307h;y{(wCG=0g+ztfe5B9DO0lQq1G3p%+WCV@Qv^CK9vzv|2Lc;2*Ny@YjQ
z;We!PZh@V6C-rYNn?7}eW;0$;+>f^Vq3iJKfcE2+O#Tz2tiqd(?@lppPpdu+t?Ebn
zWmBZTMR6}>S<=?iRr<S}T@z5BH=9#@8OV%fAg#k`R~@CVMXms|@a!Yj4g`Ml2Zi*l
AW&i*H

diff --git a/modules/__pycache__/render_video.cpython-310.pyc b/modules/__pycache__/render_video.cpython-310.pyc
deleted file mode 100644
index 1ff1aadc3cd5e13068176a6eea74bba1f96a27e8..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 1338
zcmZ8h%Wu?17@rwGcC&eGvb-rEivwsSLK9R~up(7M)ErZ!fKZ)9E5|dNxOi=AX1pYp
z7a;-a1<HXV1QH1eaply%#YZ@Cf&-@<P`|OA?6xzS`5wP-zNhSPa<YbCJ@{*B^Sp`B
zCnbz70>ZCwgasEx6#K|ll=!$uY=RNhsQwt)8pW%qX?zANw9>?xe$$bguCBy#Re&CW
zvjj(UF+vi&rRXKvA&)Rt5=rrhq@`p;(o^kFf>)35F4;o^ByoyM9s>`aay<cFD|szN
zyV@QSix9yW#-nHzr8q}c05ONLbA;r`8X%Qn9tx3q9>t(lI<`l44O*k)dt{)~2|7uq
z0EOIg3VG2wolf<ah|cV2v_X%+IZBVw<MaeQNl$?-<haoo7|Dz@|E#12Jxzaj20ewS
zXNL9OK`O3}z^1zW0i%J5QBnt+vqj%hQ_(x<53n1U4@_lUaQE?j)I7HmThQ{aZ~lJ$
z<)7!)ZQ%tQ*1F@~+u&gwP^<4z7PhSTL}B!<v~XhTg;v+|8DOV#?8Q!riFjRl(q{*7
zqk!L9zsE9)r4_;K;gtpIk2_DT8~+Pt1);RMDtPHy87&^h`wx7!^szb`a@1lUxA*an
z`?!^mcFQ)q-Co2t5;D6D$4lz7P=RE;<A%M+XIn{gZLZb7D_qBC3-fbV=UVgEuFPE$
zObUlD%wIaFOe|bX^owi#yNN#AbD~63tTx|rKz3VwyW)H6TUUPmDHk1Ea~wArn-!ZO
zmrTf8O>7(PCUfuQo%{IeiM8wnj$icJ;w+$yGgbYWvb^PGm3E1!0d*bdJiXi;%Z!M7
zf#m8#%qpCT(C@R%WLut)BGZKAN*no(%d#4zAMwy-0uUYtc4Nu$!OhJ=_Z#OSZ&vK-
z;q*KC^zB+c?T(suHhIv4T(rl-e5M^WQ~TH<ro;||K1Ph%wW8}Cw?{L~-XmUzWcM%J
zXtft(87_r^WPxn=LK^!_w2ShK$d{w-tWheuszrs`fcIhrt|?sX2{M7zu97LN<0@zm
z?vsRQ1T<Ala1FG@CfLOKH&UO%NAWaZ$8q%``Oas+WmD(lK(dM|0mhhjHb?TbN3LmQ
UR=r;2{R{lDkbqw#s;W%Lze=8Ml>h($

diff --git a/modules/__pycache__/subtitles.cpython-310.pyc b/modules/__pycache__/subtitles.cpython-310.pyc
deleted file mode 100644
index 7b8004f407ea685e43bd6e1e1a347bafa83fa78a..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 2733
zcmaJ@-EZ7P5cm4y?D#I1OOvJ_6l6dGPMF}7N|Xp8nlyo+au?;Ugt#q-bGvtO>$8vb
zUedEJ6;gNv@ds3ql1JY8A9&*r*hhHkJ5Ln?X4iLV`4C?3%<Ou+AG0&R*<^a!R^a)G
zt?u0h=~vNs{?VcFA=LCoAXvdDQhdSH2=!E7MR}j*Yx0}!>yjJ30bGj;J<~VGI+kw{
z^GHDoQOVR1I<Zfc`^Ec3zeGw{e?jr5fg8ZfWcvOLE<iEAgYk)Wze37DXR#&Pc*;MA
zZGR3I{dru%)88omd0fUbz!z`@&jP=I&*3@X7cpum)%ho|a-~*9T;B}X9`It61h|D0
zM&f<0Gt%p4l_=?^Z_`1{!X8<KMzgANvma0rvy@xpVVJU3@&G!mP8g9m=n-y2WS>O7
zxe~-(LQ`I7gEFDMdhL1}i8;rQ0bCe)6>9n=kZg`ACkUfcbcjaiL}l7YIT9^(q+<1w
za;S~8ZKa{;3e$&gBjr#>N>*XUNdapk{jqYao+6}lm2IV<?7#sW>W}osm>-}6rK;Ds
zz8j>3TPf-G#1^ubw)eucPpHFa5T|V#_F0(3PA7of;AN+3a`Pb9@NH?HUV>qB_C$S`
za4lt&Ppv&{6ZtPU!A#vS?s9`rn$W7j?O=ezq}2yA`-U8V7br;w5u-)eH%H_Lh0cTY
z^wpK+yEg_bSxvxXF}n-OgNUSe)4?ta8Ayx$A;0i!@>V`FOIj&q3ot?|hEb7?%E&?m
zpcN?A*Xkcsd~K^hCXWSzm|oidGMr5I6;noFf2?BdJMH^zVRtwWU0790#+g(&lgu;8
zV(MdXL#6?>kDuulrG|1-x%c{^#`KYfOPAnW4|OR|OWA<l@+IZOz%#gVs-6^1mBWIZ
zb5@)zo*EfI&y5N|XO88ZUwPYbwmOs}4Jom;q@=qCuu@TWpfdBs!gC`u@e83XeP?R;
zE%*+EUp50eHl81u&vc~Un2$`M3mycL^qliGjt(+oz&dYThe)wV+)gl@aaO+5kWS-l
z#GT}xon6hF&0(J`JNwrbJ?~9>GYW=VB>jBZS@N!XljaUI-@EGBb~b(IvukfU4K{@H
zg&}@kPiQY-%T5iV$#vGj6+~R+QW|C;ZPKt8(BWzlB?Ia@D?$6gnVdw}bv9TKg>Bcl
z9b-bHFou5`jD`<LeZW9$2NC&v%y)qIgEnl&b#BDn2vk=R3ctw(xeoj>9$+uP$pI)u
zVK)}h<2s)P6g>UbMA(`LpSjN3*g|$TBL`Y`Zjw#_F7G}?ZuX)3+Q*)^E*~j+@^QU!
zS@JwrR8f}Pcc5N%-|@sNzktzp?yT*L2)<`e%ylam5->)C1r(OH7K0haTc}C%{oi6c
z9nyxMn&cs~xsi$?xJF_uVDKU1$bO2PtaLLBAhri^vYwmGx|0o!*X(95-e@$ONvJvk
z5S=z90VCK6n3G*zm#E^f#5tfLBaToPT7WY}t|xsGb3=aN(~a9J&5h=*wbpvQ)_ktn
z*znhQu_HaCB|w>*l=P#Z4Y&(96!z&1gf!Pfa7S7Okye0ItsH2I$$<3-Od=6S9p4<|
zAiXR!Ul8PqAajBUB+1Enkoatu#Dv0TT0xq&<mR9|eFKOJ7-NsiMa|YMwS-D&9yv(;
z{mO3(vt{&>z@R^A6_o##0|X994Eh2DKp;q_mjyncTwZ{rD%+}Ts|(_rCS*~M&_zh7
z^Ab-0yY$C8HXvIRB-bQ2N4nt0CL}$p7FNJ2Pu_>Ao?sxp<}Kl;Xc_ob%+VqQw-&~%
zY6#o3lNhJIwntN6?}af?=u3UIm;S>z^i>$@U8t!@XeBU**#0X>_WuoZ#l7Jy>Fq)z
zJD+bufNff40KZ27VmVkb=o_IU$nIz0r42m*F919MFCE}g9Rb|tiElekdfFqnb4c(4
zNrIPF8@vWH{c`-RQ%jsl>T@Vz0~&*Gc4*Rb#(8ityV4lv8fSdqf6IpjnMb(Mr(h*{
zp1GF^ughIcr?WzST@aC8{?nPxojKDaT+$CfcbvT}q|5A8f&4Z091p%$FL5<V#r1>j
zMd2<L$xOPtZ;8u_a7kK%KEIIPVW<WTZo>?HnzTs@7nYWE+*V6OO`1gegctJ5j9=Q^
zs(-S!+H7sr>rLNku6?@My1B9CTes>TwKi`wKjud70S>8Ogd0TIh6LRSyIkL>t=H+x
zV$#{Oklm~|Hkupt8hu49P~_d*P{K*5*vNC<BZExFm-T+0>^~59BpFr~c#<WH-~|m5
TITVr7bxjv0QZ3uMP%{4l%XYbK

diff --git a/modules/__pycache__/utils.cpython-310.pyc b/modules/__pycache__/utils.cpython-310.pyc
deleted file mode 100644
index 58d6f4e7971627ab137e66ac1b990c14952298b2..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 1692
zcmaJBU2oeqkd)+DQJlnS({w9_O(=#9MpZ-Z(k?K9V$By;p!15lYn#Mrz>2gZRF*uF
zif2~_2BfdUen3zldECF)@8Ij6@)xp)?Wn{-wg4q{pFEy;$2%s|(++~s`Fm~e*8)O+
zY2orPK==+o%mbo`;s|XaYEbh%+QJk!QN=oe71Ri{<#?2UnFLq`5Pt%qcx0UI8ky9h
zh4*M=(TPzZLu+WqA5COtHbIM@q60iC=DeNrc4mQoGUq3=$s<G^I(2LSEz#+m&d}Lo
zW8`E7TF#1xh|Xm;;A@!!`1*(9w`f%Oc}C(4(|LM>F8pTxULH+lQ%6Q-WQCjP7-RGj
z;<8{Km>9Swsv)u22fdz~09seM*&ts+gxk%4hdt>&j@!wOb0$0=^jO{9U#$B69cML(
zqELiMEb49};aw6rPa`sT#>A_-`@mlsOPh7K<}dlqOHO)CIf%f+J;&L8v3SSLMX}>-
z=<O2RkS_DwjU<-w1t-EG=$`VhOZWi(nWWrvn=D9TdP(tPDx)xF<MkC1yuIL)h<fg0
zNun_D+@E5~xHbhRl80{@>;yI-5qot`H-Yv@5XK$PeH3>hFkMMFY|D@9x##}^t35)K
zJ{Uz|C+@Ns9Q{CeCybwrnP+3>h3BrvK|;Z)bDo4X)+T8ry%iF77#Cix=6hd#@B171
z$XOr8#>NHfYl8=iS_|ymn&;=U27(4XYu-12?}Mzr`-?yz*X#RmxJ!9{LIzA{Q4$Vk
zUXLL^=dm^Nynif;cAEvT={fsFIst})9}nm$WCJt-#A`qjWzY?`bfx1negXO^myKLD
z7WA5_c?}2n6GY8<t+SwttwZRZ%%BrFHFH|bpqCD<4@Ia`yAhUW5IR|gU!71u3e!_u
zSEhfDDqO8#Wrne=6jV{<)gn}34~j>qVmFLa$%L|CL2OL~kepEbf%r5yIsIa#-g=bE
zWEH9q7FykerV$gZRECkL_6DjflU*Xjt_-_ONYd?HhiyW?EhSvWB|MLB<Dn<WKFiHS
z`bLHlJXDvX1j<Z2tp4A@f6}N^s#BS#5#oc?9KrKLjSL-|5VqME7Pnuw`Yo}eP{mLN
zXUc@1K)jZOOUa`+LwdKm##uLkv-Hw9kSUSSu(v=j^dmNdht-cA^y*e#);<dmH<!v}
zF;!L{dgBzghDNKU@H-&y6dnN?4NGewiIPqV9q)Um*c;Ay<D$=t)%U!i*=jfn_lJd4
zw(l-M5H>sSlZvT|ob@6SFl8k@7OO&^hmuuF$`-7n`wgzJN93NG*kc6xlh4B8xPHEs
z^(LVMee<~;zo8cv0Bt!z#7MlW56$((Dcru2v8yRD!BXh7S=gSni<W7_MeF$){v4N$
mGQRx}{~DGn2A>0x^OxM}!s7XD*vn`2^iW^3umIVpWc&+P0>)<m

diff --git a/modules/__pycache__/voiceover.cpython-310.pyc b/modules/__pycache__/voiceover.cpython-310.pyc
deleted file mode 100644
index 7e0b8969d3e2f7a7926c8e0fe8c08139ccdcdcf3..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 3027
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

diff --git a/modules/generate_subtitles.py b/modules/generate_subtitles.py
index 0dba1e74a92bda0752acc67044b686daf8190bcd..234fdd66615b3eb12a5b5ea8b2f225e44b77adfd 100644
--- a/modules/generate_subtitles.py
+++ b/modules/generate_subtitles.py
@@ -1,20 +1,37 @@
-import os
-import whisperx
-import torch
-from modules.utils import save_ass_subtitles
+from .utils import save_ass_subtitles, get_logger, get_test_mode, ErrorCode
 
-def generate_subtitles(audio_path, subtitle_path):
-    print("Transcribing with WhisperX + alignment for word-level timestamps...")
+logger = get_logger(__name__)
 
-    device = "cuda" if torch.cuda.is_available() else "cpu"
-    model = whisperx.load_model("large-v3", device, compute_type="float32")
+def _generate_dummy_subtitles(path: str):
+    dummy = [
+        {"start": 0.0, "end": 1.0, "word": "test"},
+        {"start": 1.0, "end": 2.0, "word": "mode"},
+    ]
+    save_ass_subtitles(dummy, path)
+
+def generate_subtitles(audio_path, subtitle_path, *, model_size: str = "large-v3", test_mode: bool | None = None):
+    if test_mode is None:
+        test_mode = get_test_mode()
 
-    result = model.transcribe(audio_path)
-    model_a, metadata = whisperx.load_align_model(language_code=result["language"], device=device)
-    result_aligned = whisperx.align(result["segments"], model_a, metadata, audio_path, device)
+    if test_mode:
+        logger.info("Test mode active: using dummy subtitles and skipping WhisperX")
+        _generate_dummy_subtitles(subtitle_path)
+        return
 
-    print(f"Improved karaoke-style subtitles saved to {subtitle_path}")
-    save_ass_subtitles(result_aligned["word_segments"], subtitle_path)
+    logger.info("Transcribing with WhisperX")
+    import whisperx
+    import torch
+    device = "cuda" if torch.cuda.is_available() else "cpu"
+    try:
+        model = whisperx.load_model(model_size, device, compute_type="float32")
+        result = model.transcribe(audio_path)
+        model_a, metadata = whisperx.load_align_model(language_code=result["language"], device=device)
+        result_aligned = whisperx.align(result["segments"], model_a, metadata, audio_path, device)
+        save_ass_subtitles(result_aligned["word_segments"], subtitle_path)
+        logger.info(f"Subtitles saved to {subtitle_path}")
+    except Exception as e:
+        logger.error(f"{ErrorCode.WHISPERX_FAIL.value}: {e}")
+        raise RuntimeError(ErrorCode.WHISPERX_FAIL.value) from e
 
 if __name__ == "__main__":
     generate_subtitles("temp/voice.wav", "temp/subtitles.ass")
diff --git a/modules/render_video.py b/modules/render_video.py
index a51ec94cd80c663b16fcce0efb02da9b32f1d946..05257832a7b0d5a94a63d4ec36868aa333b4d73d 100644
--- a/modules/render_video.py
+++ b/modules/render_video.py
@@ -1,49 +1,53 @@
 
 import subprocess
 from pathlib import Path
 
+from .utils import get_logger, ErrorCode
+
+logger = get_logger(__name__)
+
 def render_final_video(background_video, audio_file, subtitle_file, output_path):
-    print(f"[INFO] Using background video: {background_video}")
-    print(f"[INFO] Using audio file: {audio_file}")
-    print(f"[INFO] Using subtitle file: {subtitle_file}")
-    print(f"[INFO] Output path: {output_path}")
+    logger.info(f"Using background video: {background_video}")
+    logger.info(f"Using audio file: {audio_file}")
+    logger.info(f"Using subtitle file: {subtitle_file}")
+    logger.info(f"Output path: {output_path}")
 
     background_video = Path(background_video).resolve()
     audio_file = Path(audio_file).resolve()
     subtitle_file = Path(subtitle_file).resolve()
     output_path = Path(output_path).resolve()
 
     if not background_video.exists():
-        print(f"[ERROR] Background video not found: {background_video}")
-        return
+        logger.error(f"{ErrorCode.BACKGROUND_NOT_FOUND.value}: {background_video}")
+        raise FileNotFoundError(ErrorCode.BACKGROUND_NOT_FOUND.value)
     if not audio_file.exists():
-        print(f"[ERROR] Audio file not found: {audio_file}")
-        return
+        logger.error(f"{ErrorCode.ELEVENLABS_FAIL.value}: audio missing {audio_file}")
+        raise FileNotFoundError(ErrorCode.ELEVENLABS_FAIL.value)
     if not subtitle_file.exists():
-        print(f"[ERROR] Subtitle file not found: {subtitle_file}")
-        return
+        logger.error(f"{ErrorCode.WHISPERX_FAIL.value}: subtitle missing {subtitle_file}")
+        raise FileNotFoundError(ErrorCode.WHISPERX_FAIL.value)
 
     subtitle_path_escaped = str(subtitle_file).replace('\\', '/').replace(':', '\\:')
 
     ffmpeg_cmd = [
         "ffmpeg",
         "-y",
         "-i", str(background_video),
         "-i", str(audio_file),
         "-filter_complex",
         f"[0:v]scale=1080:1920,setsar=1,subtitles='{subtitle_path_escaped}'[v]",
         "-map", "[v]",
         "-map", "1:a",
         "-c:v", "libx264",
         "-c:a", "aac",
         "-shortest",
         str(output_path)
     ]
 
     try:
         subprocess.run(ffmpeg_cmd, check=True)
-        print(f"[OK] Final video rendered: {output_path}")
+        logger.info(f"Final video rendered: {output_path}")
     except subprocess.CalledProcessError as e:
-        print("[ERROR] FFmpeg rendering failed.")
-        print(e)
+        logger.error(f"{ErrorCode.RENDER_FAIL.value}: {e}")
+        raise RuntimeError(ErrorCode.RENDER_FAIL.value) from e
 
diff --git a/modules/utils.py b/modules/utils.py
index d1e47ca0623e1134d9311e80417e2a35ccecde30..91f8c1ee6388abb88672fe6dd7253dc93329e9d0 100644
--- a/modules/utils.py
+++ b/modules/utils.py
@@ -1,38 +1,148 @@
+import os
 import re
+import json
+import logging
+import sys
+from pathlib import Path
+from datetime import datetime
+from enum import Enum
+
+LOG_COLORS = {
+    logging.INFO: "\033[36m",    # Cyan
+    logging.WARNING: "\033[33m", # Yellow
+    logging.ERROR: "\033[31m",   # Red
+}
+
+
+class ErrorCode(str, Enum):
+    SCRIPT_NOT_FOUND = "SCRIPT_NOT_FOUND"
+    BACKGROUND_NOT_FOUND = "BACKGROUND_NOT_FOUND"
+    ELEVENLABS_FAIL = "ELEVENLABS_FAIL"
+    WHISPERX_FAIL = "WHISPERX_FAIL"
+    RENDER_FAIL = "RENDER_FAIL"
+    THUMBNAIL_FAIL = "THUMBNAIL_FAIL"
+    COMPRESS_FAIL = "COMPRESS_FAIL"
+
+class _ColorFormatter(logging.Formatter):
+    def format(self, record):
+        color = LOG_COLORS.get(record.levelno, "")
+        reset = "\033[0m"
+        record.levelname = f"{color}{record.levelname}{reset}"
+        return super().format(record)
+
+def get_logger(name: str) -> logging.Logger:
+    """Return a configured logger with optional colored output."""
+    level_name = os.getenv("LOG_LEVEL", "INFO").upper()
+    level = getattr(logging, level_name, logging.INFO)
+    logger = logging.getLogger(name)
+    if not logger.handlers:
+        logger.setLevel(level)
+        handler = logging.StreamHandler(sys.stdout)
+        formatter = _ColorFormatter(
+            "%(asctime)s | %(name)s | %(levelname)s | %(message)s",
+            datefmt="%H:%M:%S",
+        )
+        handler.setFormatter(formatter)
+        logger.addHandler(handler)
+    return logger
+
+
+def is_api_mode(args=None) -> bool:
+    """Return True if running in API mode based on env or CLI."""
+    if args and getattr(args, "json", False):
+        return True
+    return os.getenv("API_MODE") == "1"
+
+def get_test_mode() -> bool:
+    """Return True if running in test mode based on state.json or env."""
+    if os.getenv("TEST_MODE"):
+        return os.getenv("TEST_MODE") == "1"
+    try:
+        with open("state.json", "r", encoding="utf-8") as f:
+            state = json.load(f)
+        return state.get("env", {}).get("test_mode", False)
+    except Exception:
+        return False
 
 def save_ass_subtitles(segments, path):
     header = """[Script Info]
 ScriptType: v4.00+
 Collisions: Normal
 PlayResX: 608
 PlayResY: 1080
 WrapStyle: 2
 
 [V4+ Styles]
 Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding
 Style: Default,Bangers,110,&H00FFFFFF,&H000000FF,&H00000000,&H64000000,-1,0,0,0,100,100,0,0,1,3,0,5,10,10,540,1
 
 [Events]
 Format: Layer, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text
 """
 
     def to_ass_timestamp(seconds):
         hours = int(seconds // 3600)
         minutes = int((seconds % 3600) // 60)
         secs = int(seconds % 60)
         centis = int((seconds - int(seconds)) * 100)
         return f"{hours:d}:{minutes:02d}:{secs:02d}.{centis:02d}"
 
     def remove_punctuation(text):
         return re.sub(r'[^\w\s]', '', text)
 
     body = ""
     for segment in segments:
         start = to_ass_timestamp(segment["start"])
         end = to_ass_timestamp(segment["end"])
         clean_word = remove_punctuation(segment["word"])
-        text = clean_word.replace('\\', '\\\\').replace('{', '\{').replace('}', '\}')
+        text = clean_word.replace("\\", "\\\\").replace("{", r"\{").replace("}", r"\}")
         body += f"Dialogue: 0,{start},{end},Default,,0,0,0,,{text}\\N\n"
 
     with open(path, "w", encoding="utf-8") as f:
         f.write(header + body)
+
+
+def sanitize_name(name: str) -> str:
+    """Return a filesystem-safe folder name"""
+    cleaned = re.sub(r"[^a-zA-Z0-9]+", "_", name.strip().lower())
+    cleaned = re.sub(r"_+", "_", cleaned).strip("_")
+    return cleaned or "job"
+
+
+def extract_title_and_stats(text: str):
+    """Extract title and simple stats from text."""
+    lines = [l.strip() for l in text.splitlines() if l.strip()]
+    title = lines[0] if lines else "untitled"
+    words = text.split()
+    word_count = len(words)
+    char_count = len(text)
+    try:
+        from langdetect import detect
+
+        language = detect(text)
+    except Exception:
+        language = "unknown"
+    est_read_time = round(word_count / 180 * 60, 1)  # seconds
+    return title, {
+        "word_count": word_count,
+        "char_count": char_count,
+        "est_read_time": est_read_time,
+        "language": language,
+    }
+
+
+def init_job_log(job_id: str, test_mode: bool):
+    return {
+        "job_id": job_id,
+        "timestamp": datetime.utcnow().isoformat(),
+        "test_mode": test_mode,
+        "events": [],
+        "errors": [],
+        "output_files": {},
+        "duration_sec": None,
+    }
+
+
+def save_job_log(log: dict, output_dir: Path):
+    with open(Path(output_dir) / "log.json", "w", encoding="utf-8") as f:
+        json.dump(log, f, indent=2)
diff --git a/modules/voiceover.py b/modules/voiceover.py
index a5fcf715c37e4224328f56e3dcce5c73050650b2..de354b004da2700f31fa6ce50241ad2e10032a2f 100644
--- a/modules/voiceover.py
+++ b/modules/voiceover.py
@@ -1,91 +1,82 @@
 import os
 from pathlib import Path
-import logging
 import json
 import requests
 from dotenv import load_dotenv
 import wave
 import struct
 
+from .utils import get_logger, get_test_mode, ErrorCode
+
 load_dotenv()
 
 # Constants
 PROJECT_ROOT = Path(__file__).resolve().parent.parent
 TEMP_DIR = PROJECT_ROOT / "temp"
-STATE_FILE = PROJECT_ROOT / "state.json"
-
-# Ensure temp exists
 TEMP_DIR.mkdir(parents=True, exist_ok=True)
 
-# Logging
-logging.basicConfig(filename=PROJECT_ROOT / "logs/runtime.log", level=logging.INFO)
-
-def get_test_mode():
-    try:
-        with open(STATE_FILE, "r") as f:
-            return json.load(f).get("env", {}).get("test_mode", True)
-    except Exception as e:
-        logging.error(f"Could not read state.json: {e}")
-        return True
+logger = get_logger(__name__)
 
 def generate_dummy_audio(path):
     try:
         with wave.open(str(path), 'w') as wf:
             wf.setnchannels(1)
             wf.setsampwidth(2)
             wf.setframerate(44100)
             duration_seconds = 2
             silence = [0] * int(44100 * duration_seconds)
             wf.writeframes(b''.join(struct.pack('<h', s) for s in silence))
-        logging.info(f"Dummy audio generated at {path}")
+        logger.info(f"Dummy audio generated at {path}")
     except Exception as e:
-        logging.error(f"Failed to generate dummy audio: {e}")
+        logger.error(f"Failed to generate dummy audio: {e}")
 
 def call_elevenlabs_api(text, output_path):
     api_key = os.getenv("ELEVENLABS_API_KEY")
     voice_id = os.getenv("ELEVENLABS_VOICE_ID", "EXAVITQu4vr4xnSDxMaL")  # Default voice ID
 
     if not api_key:
-        logging.error("ELEVENLABS_API_KEY not found in .env")
+        logger.error(f"{ErrorCode.ELEVENLABS_FAIL.value}: API key missing")
         return False
 
     url = f"https://api.elevenlabs.io/v1/text-to-speech/{voice_id}"
     headers = {
         "xi-api-key": api_key,
         "Content-Type": "application/json"
     }
     payload = {
         "text": text,
         "voice_settings": {
             "stability": 0.5,
             "similarity_boost": 0.75
         }
     }
 
     try:
         response = requests.post(url, headers=headers, json=payload)
         if response.status_code == 200:
             with open(output_path, "wb") as f:
                 f.write(response.content)
-            logging.info(f"Voiceover generated at {output_path}")
+            logger.info(f"Voiceover generated at {output_path}")
             return True
         else:
-            logging.error(f"ElevenLabs API Error {response.status_code}: {response.text}")
+            logger.error(f"{ErrorCode.ELEVENLABS_FAIL.value}: {response.status_code} {response.text}")
             return False
     except Exception as e:
-        logging.error(f"Exception during ElevenLabs call: {e}")
+        logger.error(f"{ErrorCode.ELEVENLABS_FAIL.value}: {e}")
         return False
 
-def generate_voiceover(script_text, output_path):
-    test_mode = get_test_mode()
+def generate_voiceover(script_text, output_path, *, test_mode: bool | None = None):
+    if test_mode is None:
+        test_mode = get_test_mode()
     output_path = Path(output_path)
     output_path.parent.mkdir(parents=True, exist_ok=True)
 
     if test_mode:
-        print("[INFO] Test mode active: generating dummy audio")
+        logger.info("Test mode active: using dummy audio and skipping ElevenLabs")
         generate_dummy_audio(output_path)
     else:
-        print("[INFO] Calling ElevenLabs API...")
+        logger.info("Calling ElevenLabs API...")
         success = call_elevenlabs_api(script_text, output_path)
         if not success:
-            print("[ERROR] Failed to generate voiceover.")
+            logger.error(f"{ErrorCode.ELEVENLABS_FAIL.value}: generation failed")
+            raise RuntimeError(ErrorCode.ELEVENLABS_FAIL.value)
diff --git a/pipeline.py b/pipeline.py
new file mode 100644
index 0000000000000000000000000000000000000000..8e0da91502bac6a6b186936dbf8bb275c5f470a3
--- /dev/null
+++ b/pipeline.py
@@ -0,0 +1,255 @@
+import argparse
+import json
+import os
+import shutil
+import subprocess
+import time
+import logging
+import wave
+from pathlib import Path
+
+from modules.voiceover import generate_voiceover
+from modules.generate_subtitles import generate_subtitles
+from modules.render_video import render_final_video
+from modules.utils import (
+    get_logger,
+    sanitize_name,
+    extract_title_and_stats,
+    init_job_log,
+    save_job_log,
+    ErrorCode,
+    is_api_mode,
+)
+
+logger = get_logger(__name__)
+
+
+def parse_args():
+    parser = argparse.ArgumentParser(description="Run the AutoContent pipeline")
+    parser.add_argument("--script", required=True, help="Path to script text file")
+    parser.add_argument("--background", required=True, help="Background video file")
+    parser.add_argument("--output-dir", help="Directory for final outputs")
+    parser.add_argument("--dry-run", action="store_true", help="Run pipeline without rendering final video")
+    parser.add_argument("--test-mode", action="store_true", help="Use dummy audio and subtitles")
+    parser.add_argument("--verbose", action="store_true", help="Enable debug logging")
+    parser.add_argument("--keep-temp", action="store_true", help="Retain temp folder after execution")
+    parser.add_argument("--thumbnail", action="store_true", help="Export a thumbnail from the final video")
+    parser.add_argument("--model-size", default="large-v3", help="WhisperX model size")
+    parser.add_argument("--compress", action="store_true", help="Compress final video")
+    parser.add_argument("--cleanup-old", type=int, default=0, help="Delete N oldest output folders before running")
+    parser.add_argument("--json", action="store_true", help="Print JSON summary to stdout")
+    parser.add_argument("--strict", action="store_true", help="Stop pipeline on first error")
+    parser.add_argument("--max-length", type=int, default=0, help="Trim script if duration exceeds this many seconds")
+    return parser.parse_args()
+
+
+def validate_paths(script_path: Path, background_path: Path):
+    if not script_path.is_file():
+        raise FileNotFoundError(ErrorCode.SCRIPT_NOT_FOUND.value)
+    if not background_path.is_file():
+        raise FileNotFoundError(ErrorCode.BACKGROUND_NOT_FOUND.value)
+
+
+def export_thumbnail(video: Path, thumb: Path, title: str):
+    try:
+        subprocess.run([
+            "ffmpeg", "-y", "-i", str(video), "-ss", "00:00:01",
+            "-vframes", "1",
+            "-vf", f"drawtext=text='{title}':fontcolor=white:fontsize=32:box=1:boxcolor=black@0.5:boxborderw=5:x=(w-text_w)/2:y=(h-text_h)/2",
+            str(thumb)
+        ], check=True)
+        logger.info(f"Thumbnail exported to {thumb}")
+    except subprocess.CalledProcessError as e:
+        logger.error(f"{ErrorCode.THUMBNAIL_FAIL.value}: {e}")
+        raise RuntimeError(ErrorCode.THUMBNAIL_FAIL.value) from e
+
+
+def compress_video(src: Path, dest: Path):
+    try:
+        subprocess.run([
+            "ffmpeg",
+            "-y",
+            "-i",
+            str(src),
+            "-b:v",
+            "1M",
+            "-bufsize",
+            "1M",
+            str(dest),
+        ], check=True)
+        logger.info(f"Compressed video saved to {dest}")
+    except subprocess.CalledProcessError as e:
+        logger.error(f"{ErrorCode.COMPRESS_FAIL.value}: {e}")
+        raise RuntimeError(ErrorCode.COMPRESS_FAIL.value) from e
+
+
+def cleanup_old_jobs(count: int, base: Path = Path("output")):
+    if count <= 0 or not base.exists():
+        return
+    dirs = [d for d in base.iterdir() if d.is_dir()]
+    dirs.sort(key=lambda p: p.stat().st_mtime)
+    for d in dirs[:count]:
+        shutil.rmtree(d, ignore_errors=True)
+        logger.info(f"Removed old output folder: {d}")
+
+
+def fmt_time(seconds: float) -> str:
+    m, s = divmod(int(seconds), 60)
+    return f"{m:02d}:{s:02d}"
+
+
+def run_pipeline(args, job_id: str | None = None, started_at: str | None = None):
+    if args.verbose:
+        logger.setLevel(logging.DEBUG)
+    elif is_api_mode(args):
+        logger.setLevel(logging.WARNING)
+
+    script_path = Path(args.script)
+    background_path = Path(args.background)
+    validate_paths(script_path, background_path)
+
+    if args.cleanup_old:
+        cleanup_old_jobs(args.cleanup_old)
+
+    with open(script_path, "r", encoding="utf-8") as f:
+        script_text = f.read()
+
+    if args.max_length:
+        max_words = args.max_length * 3
+        words = script_text.split()
+        if len(words) > max_words:
+            script_text = " ".join(words[:max_words])
+            logger.info(f"Script trimmed to {args.max_length}s / {max_words} words")
+
+    title, stats = extract_title_and_stats(script_text)
+
+    if args.output_dir:
+        output_dir = Path(args.output_dir)
+    else:
+        output_dir = Path("output") / sanitize_name(title)
+
+    output_dir.mkdir(parents=True, exist_ok=True)
+    temp_dir = Path("temp")
+    temp_dir.mkdir(parents=True, exist_ok=True)
+
+    job_log = init_job_log(output_dir.name, args.test_mode)
+
+    voice_path = temp_dir / "voice.wav"
+    subs_path = temp_dir / "subtitles.ass"
+    video_path = output_dir / "final.mp4"
+
+    start = time.time()
+
+    try:
+        generate_voiceover(script_text, voice_path, test_mode=args.test_mode)
+        job_log["output_files"]["audio"] = str(voice_path)
+    except Exception as e:
+        job_log["errors"].append(e.args[0] if e.args else str(e))
+        if args.strict:
+            raise
+
+    with wave.open(str(voice_path)) as wf:
+        audio_duration = wf.getnframes() / wf.getframerate()
+
+    try:
+        generate_subtitles(voice_path, subs_path, model_size=args.model_size, test_mode=args.test_mode)
+        job_log["output_files"]["subtitles"] = str(subs_path)
+    except Exception as e:
+        job_log["errors"].append(e.args[0] if e.args else str(e))
+        if args.strict:
+            raise
+
+    if not args.dry_run:
+        try:
+            render_final_video(background_path, voice_path, subs_path, video_path)
+            job_log["output_files"]["video"] = str(video_path)
+        except Exception as e:
+            job_log["errors"].append(e.args[0] if e.args else str(e))
+            if args.strict:
+                raise
+        if args.thumbnail and not job_log["errors"]:
+            try:
+                thumb = output_dir / "thumbnail.png"
+                export_thumbnail(video_path, thumb, title)
+                job_log["output_files"]["thumbnail"] = str(thumb)
+            except Exception as e:
+                job_log["errors"].append(e.args[0] if e.args else str(e))
+                if args.strict:
+                    raise
+        if args.compress and not job_log["errors"]:
+            try:
+                compressed = output_dir / "final_compressed.mp4"
+                compress_video(video_path, compressed)
+                job_log["output_files"]["compressed"] = str(compressed)
+            except Exception as e:
+                job_log["errors"].append(e.args[0] if e.args else str(e))
+                if args.strict:
+                    raise
+    else:
+        logger.info("Dry run enabled - skipping video rendering")
+
+    end_time = time.time()
+    duration = end_time - start
+
+    metadata = {
+        "job_id": job_id or output_dir.name,
+        "title": title,
+        **stats,
+        "script": script_path.name,
+        "started_at": started_at or time.strftime("%Y-%m-%dT%H:%M:%SZ", time.gmtime(start)),
+        "completed_at": time.strftime("%Y-%m-%dT%H:%M:%SZ", time.gmtime(end_time)),
+        "duration_seconds": int(duration),
+        "model_size": args.model_size,
+        "voice_id": os.getenv("ELEVENLABS_VOICE_ID", "default"),
+        "audio_duration": round(audio_duration, 2),
+        "total_runtime": round(duration, 2),
+        "flags": {
+            "dry_run": args.dry_run,
+            "test_mode": args.test_mode,
+            "thumbnail": args.thumbnail,
+            "keep_temp": args.keep_temp,
+            "model_size": args.model_size,
+            "compress": args.compress,
+        },
+    }
+
+    with open(output_dir / "metadata.json", "w", encoding="utf-8") as f:
+        json.dump(metadata, f, indent=2)
+
+    job_log["duration_sec"] = round(duration, 2)
+    save_job_log(job_log, output_dir)
+
+    if not args.keep_temp:
+        shutil.rmtree(temp_dir, ignore_errors=True)
+    else:
+        logger.info(f"Temp files retained at {temp_dir}")
+
+    summary_text = (
+        f"\n✅ Job complete\n"
+        f"📝 Title: \"{title}\"\n"
+        f"🕓 Voice Length: {fmt_time(audio_duration)}\n"
+        f"⏱ Total Runtime: {duration:.1f}s\n"
+        f"📁 Output: {output_dir}/"
+    )
+    logger.info(summary_text)
+
+    if args.json:
+        summary = {
+            "job_id": output_dir.name,
+            "title": title,
+            "duration": round(audio_duration, 2),
+            "output_path": str(output_dir),
+            "errors": job_log["errors"],
+        }
+        print(json.dumps(summary))
+
+    return output_dir
+
+
+def main():
+    args = parse_args()
+    run_pipeline(args)
+
+
+if __name__ == "__main__":
+    main()
diff --git a/pytest.ini b/pytest.ini
new file mode 100644
index 0000000000000000000000000000000000000000..5ee6477165727539aa0701c22b47da2ceaedeff5
--- /dev/null
+++ b/pytest.ini
@@ -0,0 +1,2 @@
+[pytest]
+testpaths = tests
diff --git a/render.yaml b/render.yaml
new file mode 100644
index 0000000000000000000000000000000000000000..df9a9f18541e3bf1c05947c10485ef85ab2db877
--- /dev/null
+++ b/render.yaml
@@ -0,0 +1,8 @@
+services:
+  - type: web
+    name: autocontent-api
+    env: docker
+    plan: starter
+    dockerfilePath: ./Dockerfile
+    autoDeploy: true
+    healthCheckPath: /health
diff --git a/requirements.txt b/requirements.txt
index 8f767bc8905c4d8cb12f8991a9f25187bb75c9ac..db143d2e8c7f56f7e24ff9e9a813dc608dd02ae5 100644
GIT binary patch
delta 41
tcmdm>e^GzK264r-#Nv{~f=pXm13g1SLp=ko(z49t{GvRNfUyCP4*)bc4BP+!

delta 7
Ocmcbpzd?V)25|rmivw2x

diff --git a/server.py b/server.py
new file mode 100644
index 0000000000000000000000000000000000000000..dc901edf98ce06d8a8d10c3c568c3bf0b6f4d33a
--- /dev/null
+++ b/server.py
@@ -0,0 +1,181 @@
+from fastapi import FastAPI, UploadFile, File, Form, Request, HTTPException
+from fastapi.responses import JSONResponse, FileResponse
+from pathlib import Path
+import shutil
+import uuid
+import asyncio
+import time
+from concurrent.futures import ThreadPoolExecutor
+from typing import Dict
+import argparse
+import os
+import threading
+
+import pipeline
+from modules.utils import get_logger
+
+from contextlib import asynccontextmanager
+
+
+@asynccontextmanager
+async def lifespan(app: FastAPI):
+    thread = threading.Thread(target=_cleanup_loop, daemon=True)
+    thread.start()
+    yield
+
+
+app = FastAPI(lifespan=lifespan)
+
+executor = ThreadPoolExecutor(max_workers=3)
+
+JOBS: Dict[str, dict] = {}
+RATE_LIMITS: Dict[str, list] = {}
+
+OUTPUT_DIR = os.getenv("OUTPUT_DIR", "output")
+
+logger = get_logger(__name__)
+
+TEMP_UPLOAD = Path("temp/uploads")
+TEMP_UPLOAD.mkdir(parents=True, exist_ok=True)
+
+CLEANUP_INTERVAL = 600  # seconds
+CLEANUP_AGE = 60 * 60  # seconds
+
+
+def cleanup_output_dir(age_seconds: int = CLEANUP_AGE):
+    base = Path(OUTPUT_DIR)
+    if not base.exists():
+        return
+    cutoff = time.time() - age_seconds
+    for folder in base.iterdir():
+        if not folder.is_dir():
+            continue
+        if folder.name in JOBS and JOBS[folder.name]["status"] in ("queued", "running"):
+            continue
+        if folder.stat().st_mtime < cutoff:
+            shutil.rmtree(folder, ignore_errors=True)
+            logger.info(f"Removed old job folder: {folder}")
+
+
+def _cleanup_loop():
+    while True:
+        cleanup_output_dir()
+        time.sleep(CLEANUP_INTERVAL)
+
+
+
+
+def run_job(job_id: str, script_path: Path, background_path: Path, params: dict):
+    JOBS[job_id]["status"] = "processing"
+    start_ts = time.time()
+    JOBS[job_id]["started_at"] = time.strftime("%Y-%m-%dT%H:%M:%SZ", time.gmtime(start_ts))
+    args = argparse.Namespace(
+        script=str(script_path),
+        background=str(background_path),
+        output_dir=str(Path(OUTPUT_DIR) / job_id),
+        dry_run=params.get("dry_run", False),
+        test_mode=params.get("test_mode", False),
+        verbose=params.get("verbose", False),
+        keep_temp=params.get("keep_temp", False),
+        thumbnail=params.get("thumbnail", False),
+        model_size=params.get("model_size", "large-v3"),
+        compress=False,
+        cleanup_old=0,
+        json=params.get("json", False),
+        strict=params.get("strict", False),
+        max_length=params.get("max_length", 0),
+    )
+    try:
+        out_dir = pipeline.run_pipeline(args, job_id=job_id, started_at=JOBS[job_id]["started_at"])
+        JOBS[job_id]["status"] = "complete"
+        JOBS[job_id]["output_dir"] = str(out_dir)
+        JOBS[job_id]["completed_at"] = time.strftime("%Y-%m-%dT%H:%M:%SZ", time.gmtime())
+        JOBS[job_id]["duration_seconds"] = int(time.time() - start_ts)
+        (Path(out_dir) / "log.txt").write_text("Job log placeholder")
+    except Exception as e:
+        JOBS[job_id]["status"] = "failed"
+        JOBS[job_id]["error"] = str(e)
+        JOBS[job_id]["completed_at"] = time.strftime("%Y-%m-%dT%H:%M:%SZ", time.gmtime())
+
+
+@app.post("/generate")
+async def generate(
+    request: Request,
+    script_file: UploadFile = File(...),
+    background_file: UploadFile = File(...),
+    dry_run: bool = Form(False),
+    test_mode: bool = Form(False),
+    verbose: bool = Form(False),
+    strict: bool = Form(False),
+    json_flag: bool = Form(False),
+    max_length: int = Form(0),
+):
+    ip = request.client.host
+    rl = RATE_LIMITS.get(ip, [time.time(), 0])
+    if time.time() - rl[0] > 3600:
+        rl = [time.time(), 0]
+    if rl[1] >= 3:
+        return JSONResponse(status_code=429, content={"detail": "Rate limit exceeded. Try again later."})
+    rl[1] += 1
+    RATE_LIMITS[ip] = rl
+    job_id = str(uuid.uuid4())
+    script_path = TEMP_UPLOAD / f"{job_id}_script.txt"
+    background_path = TEMP_UPLOAD / f"{job_id}_{background_file.filename}"
+    TEMP_UPLOAD.mkdir(parents=True, exist_ok=True)
+    with open(script_path, "wb") as f:
+        f.write(await script_file.read())
+    with open(background_path, "wb") as f:
+        f.write(await background_file.read())
+    JOBS[job_id] = {"status": "queued"}
+    params = {
+        "dry_run": dry_run,
+        "test_mode": test_mode,
+        "verbose": verbose,
+        "strict": strict,
+        "json": json_flag,
+        "max_length": max_length,
+    }
+    loop = asyncio.get_event_loop()
+    if not loop.is_closed():
+        loop.run_in_executor(
+            executor,
+            run_job,
+            job_id,
+            script_path,
+            background_path,
+            params,
+        )
+    return {"job_id": job_id, "status": "queued"}
+
+
+@app.get("/status/{job_id}")
+async def status(job_id: str):
+    job = JOBS.get(job_id)
+    if not job:
+        return JSONResponse(status_code=404, content={"error": "job not found"})
+    payload = {
+        "job_id": job_id,
+        "status": job.get("status"),
+        "started_at": job.get("started_at"),
+        "completed_at": job.get("completed_at"),
+        "duration_seconds": job.get("duration_seconds"),
+        "video_url": f"/download/{job_id}",
+        "log_url": f"/logs/{job_id}" if (Path(job.get("output_dir", "")) / "log.txt").exists() else None,
+    }
+    return payload
+
+
+@app.get("/download/{job_id}")
+async def download_video(job_id: str):
+    file_path = os.path.join(OUTPUT_DIR, job_id, "final.mp4")
+    if not os.path.isfile(file_path):
+        raise HTTPException(status_code=404, detail="Video not found")
+    return FileResponse(path=file_path, media_type="video/mp4", filename=f"{job_id}.mp4")
+
+
+@app.get("/logs/{job_id}")
+async def get_logs(job_id: str):
+    file_path = os.path.join(OUTPUT_DIR, job_id, "log.txt")
+    if not os.path.isfile(file_path):
+        raise HTTPException(status_code=404, detail="Log not found")
+    return FileResponse(path=file_path, media_type="text/plain", filename="log.txt")
diff --git a/start.sh b/start.sh
new file mode 100755
index 0000000000000000000000000000000000000000..bb87aa9238dc3e47c7999f6bed6b7058f4d0964f
--- /dev/null
+++ b/start.sh
@@ -0,0 +1,8 @@
+#!/bin/bash
+# Launch the FastAPI app with Gunicorn and multiple Uvicorn workers
+exec gunicorn server:app \
+  --workers 4 \
+  --worker-class uvicorn.workers.UvicornWorker \
+  --bind 0.0.0.0:8000 \
+  --timeout 120 \
+  --log-level info
diff --git a/temp/reddit_card.png b/temp/reddit_card.png
deleted file mode 100644
index e260bcdcea97891f008a27e468af32f24c316bd7..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 18844
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
V&nfuRJMagWj-URm)Z*+P{{>%OeCq%J

diff --git a/temp/subtitles.ass b/temp/subtitles.ass
deleted file mode 100644
index c426edfd1a2785e6ec3cdd52fc4e2a63af5d1897..0000000000000000000000000000000000000000
--- a/temp/subtitles.ass
+++ /dev/null
@@ -1,33 +0,0 @@
-[Script Info]
-ScriptType: v4.00+
-Collisions: Normal
-PlayResX: 608
-PlayResY: 1080
-WrapStyle: 2
-
-[V4+ Styles]
-Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding
-Style: Default,Bangers,110,&H00FFFFFF,&H000000FF,&H00000000,&H64000000,-1,0,0,0,100,100,0,0,1,3,0,5,10,10,540,1
-
-[Events]
-Format: Layer, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text
-Dialogue: 0,0:00:00.03,0:00:00.27,Default,,0,0,0,,Theres\N
-Dialogue: 0,0:00:00.31,0:00:00.33,Default,,0,0,0,,a\N
-Dialogue: 0,0:00:00.39,0:00:00.71,Default,,0,0,0,,video\N
-Dialogue: 0,0:00:00.77,0:00:01.27,Default,,0,0,0,,circulating\N
-Dialogue: 0,0:00:01.35,0:00:01.75,Default,,0,0,0,,online\N
-Dialogue: 0,0:00:02.21,0:00:02.52,Default,,0,0,0,,black\N
-Dialogue: 0,0:00:02.58,0:00:02.96,Default,,0,0,0,,screen\N
-Dialogue: 0,0:00:02.98,0:00:03.32,Default,,0,0,0,,11\N
-Dialogue: 0,0:00:03.38,0:00:03.68,Default,,0,0,0,,seconds\N
-Dialogue: 0,0:00:03.76,0:00:04.04,Default,,0,0,0,,long\N
-Dialogue: 0,0:00:04.84,0:00:04.88,Default,,0,0,0,,At\N
-Dialogue: 0,0:00:04.90,0:00:05.02,Default,,0,0,0,,the\N
-Dialogue: 0,0:00:05.12,0:00:05.26,Default,,0,0,0,,end\N
-Dialogue: 0,0:00:05.30,0:00:05.37,Default,,0,0,0,,a\N
-Dialogue: 0,0:00:05.42,0:00:05.69,Default,,0,0,0,,woman\N
-Dialogue: 0,0:00:05.73,0:00:06.11,Default,,0,0,0,,whispers\N
-Dialogue: 0,0:00:06.15,0:00:07.01,Default,,0,0,0,,Dont\N
-Dialogue: 0,0:00:07.05,0:00:07.23,Default,,0,0,0,,watch\N
-Dialogue: 0,0:00:07.29,0:00:07.33,Default,,0,0,0,,it\N
-Dialogue: 0,0:00:07.39,0:00:07.99,Default,,0,0,0,,twice\N
diff --git a/temp/voice.wav b/temp/voice.wav
deleted file mode 100644
index 2ae3acb50deb2c23fa6c00a7cc6d61b57f500cc7..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 130030
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

diff --git a/tests/__init__.py b/tests/__init__.py
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
diff --git a/tests/test_pipeline.py b/tests/test_pipeline.py
new file mode 100644
index 0000000000000000000000000000000000000000..0408000f517c5e256c077f740d23a3bd9ebfb97a
--- /dev/null
+++ b/tests/test_pipeline.py
@@ -0,0 +1,116 @@
+import json
+import os
+import shutil
+import logging
+from pathlib import Path
+from argparse import Namespace
+import pytest
+
+import pipeline
+
+SCRIPT = Path('scripts/test_script.txt')
+BACKGROUND = Path('assets/backgrounds/test_video.webm')
+
+
+def test_missing_file_errors(tmp_path):
+    args = Namespace(script='missing.txt', background=str(BACKGROUND), output_dir=str(tmp_path), dry_run=True, test_mode=True, verbose=False, keep_temp=False, thumbnail=False, model_size='tiny', compress=False, cleanup_old=0, json=False, strict=False, max_length=0)
+    try:
+        pipeline.run_pipeline(args)
+    except FileNotFoundError:
+        pass
+    else:
+        assert False, 'Expected FileNotFoundError'
+
+
+def test_verbose_log_level(monkeypatch, tmp_path):
+    args = Namespace(script=str(SCRIPT), background=str(BACKGROUND), output_dir=str(tmp_path), dry_run=True, test_mode=True, verbose=True, keep_temp=False, thumbnail=False, model_size='tiny', compress=False, cleanup_old=0, json=False, strict=False, max_length=0)
+    pipeline.run_pipeline(args)
+    assert pipeline.logger.level == logging.DEBUG
+
+
+def test_keep_temp_retains_files(tmp_path):
+    temp_dir = Path('temp')
+    if temp_dir.exists():
+        shutil.rmtree(temp_dir)
+    args = Namespace(script=str(SCRIPT), background=str(BACKGROUND), output_dir=str(tmp_path), dry_run=True, test_mode=True, verbose=False, keep_temp=True, thumbnail=False, model_size='tiny', compress=False, cleanup_old=0, json=False, strict=False, max_length=0)
+    pipeline.run_pipeline(args)
+    assert (temp_dir / 'voice.wav').exists()
+    shutil.rmtree(temp_dir)
+
+
+def test_model_override(tmp_path):
+    args = Namespace(script=str(SCRIPT), background=str(BACKGROUND), output_dir=str(tmp_path), dry_run=True, test_mode=True, verbose=False, keep_temp=False, thumbnail=False, model_size='small', compress=False, cleanup_old=0, json=False, strict=False, max_length=0)
+    pipeline.run_pipeline(args)
+    meta = json.loads((Path(tmp_path) / 'metadata.json').read_text())
+    assert meta['model_size'] == 'small'
+
+
+def test_metadata_file(tmp_path):
+    args = Namespace(script=str(SCRIPT), background=str(BACKGROUND), output_dir=str(tmp_path), dry_run=True, test_mode=True, verbose=False, keep_temp=False, thumbnail=False, model_size='tiny', compress=False, cleanup_old=0, json=False, strict=False, max_length=0)
+    pipeline.run_pipeline(args)
+    meta_path = Path(tmp_path) / 'metadata.json'
+    assert meta_path.exists()
+    data = json.loads(meta_path.read_text())
+    assert 'title' in data and 'word_count' in data
+
+
+def test_sanitized_folder_name(tmp_path):
+    custom_script = tmp_path / 'Weird Title!!.txt'
+    custom_script.write_text('Hello world')
+    args = Namespace(script=str(custom_script), background=str(BACKGROUND), output_dir=None, dry_run=True, test_mode=True, verbose=False, keep_temp=False, thumbnail=False, model_size='tiny', compress=False, cleanup_old=0, json=False, strict=False, max_length=0)
+    pipeline.run_pipeline(args)
+    expected_dir = Path('output') / 'hello_world'
+    assert expected_dir.exists()
+    shutil.rmtree(expected_dir)
+
+
+def test_log_file_created(tmp_path):
+    args = Namespace(script=str(SCRIPT), background=str(BACKGROUND), output_dir=str(tmp_path), dry_run=True, test_mode=True, verbose=False, keep_temp=False, thumbnail=False, model_size='tiny', compress=False, cleanup_old=0, json=False, strict=False, max_length=0)
+    pipeline.run_pipeline(args)
+    assert (Path(tmp_path) / 'log.json').exists()
+
+
+def test_compress_reduces_size(tmp_path):
+    if shutil.which('ffmpeg') is None:
+        pytest.skip('ffmpeg not available')
+    args = Namespace(script=str(SCRIPT), background=str(BACKGROUND), output_dir=str(tmp_path), dry_run=False, test_mode=True, verbose=False, keep_temp=False, thumbnail=False, model_size='tiny', compress=True, cleanup_old=0, json=False, strict=False, max_length=0)
+    pipeline.run_pipeline(args)
+    orig = Path(tmp_path) / 'final.mp4'
+    comp = Path(tmp_path) / 'final_compressed.mp4'
+    assert comp.exists()
+    assert comp.stat().st_size < orig.stat().st_size
+
+
+def test_cleanup_old(tmp_path):
+    base = Path('output')
+    old1 = base / 'old1'
+    old2 = base / 'old2'
+    old1.mkdir(parents=True, exist_ok=True)
+    old2.mkdir(parents=True, exist_ok=True)
+    (old1 / 'dummy.txt').write_text('x')
+    (old2 / 'dummy.txt').write_text('x')
+    os.utime(old1, (1, 1))
+    os.utime(old2, (2, 2))
+    args = Namespace(script=str(SCRIPT), background=str(BACKGROUND), output_dir=str(tmp_path), dry_run=True, test_mode=True, verbose=False, keep_temp=False, thumbnail=False, model_size='tiny', compress=False, cleanup_old=1, json=False, strict=False, max_length=0)
+    pipeline.run_pipeline(args)
+    # old1 should be removed as the oldest
+    assert not old1.exists() and old2.exists()
+    shutil.rmtree(old2)
+
+
+def test_json_output(tmp_path, capsys):
+    args = Namespace(script=str(SCRIPT), background=str(BACKGROUND), output_dir=str(tmp_path), dry_run=True, test_mode=True, verbose=False, keep_temp=False, thumbnail=False, model_size='tiny', compress=False, cleanup_old=0, json=True, strict=False, max_length=0)
+    pipeline.run_pipeline(args)
+    captured = capsys.readouterr().out
+    data = json.loads(captured.strip())
+    assert data['output_path'] == str(tmp_path)
+
+
+def test_strict_halts(tmp_path, monkeypatch):
+    def fail_render(*a, **k):
+        raise RuntimeError('FAIL')
+
+    monkeypatch.setattr(pipeline, 'render_final_video', fail_render)
+    args = Namespace(script=str(SCRIPT), background=str(BACKGROUND), output_dir=str(tmp_path), dry_run=False, test_mode=True, verbose=False, keep_temp=False, thumbnail=False, model_size='tiny', compress=False, cleanup_old=0, json=False, strict=True, max_length=0)
+    with pytest.raises(RuntimeError):
+        pipeline.run_pipeline(args)
diff --git a/tests/test_server.py b/tests/test_server.py
new file mode 100644
index 0000000000000000000000000000000000000000..093116ed97a9ae652e98d4fb0435089f5f31cfcb
--- /dev/null
+++ b/tests/test_server.py
@@ -0,0 +1,74 @@
+import time
+import os
+from pathlib import Path
+from fastapi.testclient import TestClient
+
+import server
+
+SCRIPT = Path('scripts/test_script.txt')
+BACKGROUND = Path('assets/backgrounds/test_video.webm')
+
+client = TestClient(server.app)
+
+def setup_function(func):
+    server.RATE_LIMITS.clear()
+
+def submit_job():
+    with SCRIPT.open('rb') as sf, BACKGROUND.open('rb') as bf:
+        resp = client.post(
+            '/generate',
+            files={
+                'script_file': ('script.txt', sf.read(), 'text/plain'),
+                'background_file': ('bg.webm', bf.read(), 'video/webm')
+            },
+            data={'test_mode': '1', 'dry_run': '0'}
+        )
+        assert resp.status_code == 200
+        return resp.json()['job_id']
+
+def wait_for_completion(job_id):
+    for _ in range(40):
+        r = client.get(f'/status/{job_id}')
+        assert r.status_code == 200
+        data = r.json()
+        if data['status'] in ('complete', 'failed'):
+            return data
+        time.sleep(0.1)
+    return data
+
+def test_generate_download_and_status(tmp_path):
+    job_id = submit_job()
+    status = wait_for_completion(job_id)
+    assert status['status'] == 'complete'
+    assert status['video_url']
+    # download endpoint
+    r = client.get(status['video_url'])
+    assert r.status_code == 200
+    assert r.headers['content-type'] == 'video/mp4'
+    # log endpoint
+    log_resp = client.get(f'/logs/{job_id}')
+    assert log_resp.status_code == 200
+    assert 'placeholder' in log_resp.text
+
+
+def test_rate_limiting(tmp_path):
+    for _ in range(3):
+        submit_job()
+    extra = client.post(
+        '/generate',
+        files={'script_file': ('a.txt', b'x', 'text/plain'),
+               'background_file': ('b.webm', b'x', 'video/webm')},
+        data={'test_mode': '1', 'dry_run': '0'}
+    )
+    assert extra.status_code == 429
+
+
+def test_cleanup_function(tmp_path):
+    old_folder = Path('output/oldjob')
+    old_folder.mkdir(parents=True, exist_ok=True)
+    (old_folder / 'dummy').write_text('x')
+    # set mtime to past
+    past = time.time() - (server.CLEANUP_AGE + 10)
+    os.utime(old_folder, (past, past))
+    server.cleanup_output_dir(age_seconds=0)
+    assert not old_folder.exists()
